const express = require('express')
const bodyParser = require('body-parser')
const graphQlHTTP = require('express-graphql')
const {buildSchema} = require('graphql')

const app = express()

const GRAPHQL_PORT =3000

const leagues = []

app.use(bodyParser.json())

app.use('/graphql',
  graphQlHTTP({
    schema: buildSchema(`
    "_id is autogenerated"
      type League{
        _id: ID!
        name: String!
        tier: Int!
        createdDateTime: String!
      }

      input LeagueInput{
        name:String!
        tier: Int!
        createdDateTime: String!
      }

      type Query{
        "A list of saved leagues"
        leagues: [League!]!
      }
      type Mutation{
        createLeague(leagueInput: LeagueInput): League
      }

      schema{
        query: Query
        mutation: Mutation
      }
    `),
    rootValue: {
      leagues: () => {
        return leagues
      },
      createLeague: (args) => {
        const league = {
          _id: Math.random().toString(),
          name: args.leagueInput.name,
          tier: +args.leagueInput.tier,
          createdDateTime: args.leagueInput.createdDateTime
        }
        leagues.push(league)
        return league
      }
    },
    graphiql: true
  })
)

app.listen(GRAPHQL_PORT)
